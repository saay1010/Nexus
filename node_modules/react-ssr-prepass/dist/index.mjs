import{Fragment as e,Component as t,options as r}from"preact";import{Suspense as o}from"preact/compat";function n(e,t){for(let r in t)e[r]=t[r];return e}function s(e,t){return Array.isArray(t)?t.reduce(s,e):null!=t&&!1!==t&&e.push(t),e}export default function _(p,i,l){if(null==p||"object"!=typeof p)return Promise.resolve();let c=p.type,a=p.props,u=[];if(l=l||{},"function"==typeof c&&c!==e&&c!==o){let e,o=p.__c=new t(a,l);o.__d=!0,o.__v=p,void 0===o.state&&(o.state={});let s=!1,u=c.contextType,m=u&&l[u.__c],d=null!=u?m?m.props.value:u.__p||u.__:l;return c.prototype&&"function"==typeof c.prototype.render?(s=!0,o=p.__c=new c(a,d),o.__d=!0,o.__v=p,o.props=a,o.context=d,void 0===o.state&&(o.state={}),c.getDerivedStateFromProps?o.state=n(n({},o.state),c.getDerivedStateFromProps(o.props,o.state)):o.componentWillMount&&o.componentWillMount(),e=()=>{try{return r.render&&r.render(p),r.__r&&r.__r(p),Promise.resolve(o.render(o.props,o.state,o.context))}catch(t){return t&&t.then?t.then(e,e):Promise.reject(t)}}):e=()=>{try{const e=r.__s;r.__s=!0,r.render&&r.render(p),r.__r&&r.__r(p);const t=Promise.resolve(c.call(p.__c,a,d));return r.__s=e,t}catch(t){return t&&t.then?t.then(e,e):Promise.reject(t)}},(i?(i(p,s?o:void 0)||Promise.resolve()).then(e):e()).then(e=>(o.getChildContext&&(l=n(n({},l),o.getChildContext())),Array.isArray(e)?Promise.all(e.map(e=>_(e,i,l))):_(e,i,l)))}return a&&s(u=[],a.children).length?Promise.all(u.map(e=>_(e,i,l))):Promise.resolve()}
//# sourceMappingURL=index.module.js.map
